-- MySQL Script generated by MySQL Workbench
-- Sat Aug 19 20:13:37 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema afya
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema afya
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `afya` DEFAULT CHARACTER SET utf8 ;
USE `afya` ;

-- -----------------------------------------------------
-- Table `afya`.`patients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`patients` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL,
  `prenom` VARCHAR(45) NOT NULL,
  `date_naissance` DATE NOT NULL,
  `genre` VARCHAR(45) NOT NULL,
  `telephone` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `cni` VARCHAR(45) NOT NULL,
  `profession` VARCHAR(45) NULL,
  `ville` VARCHAR(45) NULL,
  `commune_quartier` VARCHAR(45) NULL,
  `parrainage` VARCHAR(45) NULL COMMENT 'cela permet au medecin de parrainer moyennant un montant\n',
  `id_users` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`gestionnaires`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`gestionnaires` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL,
  `prenom` VARCHAR(45) NOT NULL,
  `date_naissance` DATE NOT NULL,
  `telephone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `cni` VARCHAR(45) NOT NULL,
  `domicile` VARCHAR(45) NOT NULL,
  `ville` VARCHAR(45) NULL,
  `commune_quartier` VARCHAR(45) NULL,
  `actif` VARCHAR(45) NULL COMMENT 'le gestionnaire peut etre bloqué\n\nTRUE: actif\n\nFALSE: bloqué',
  `id_users` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`superviseurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`superviseurs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `gestionnaires_id` INT NOT NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_superviseurs_gestionnaires1_idx` (`gestionnaires_id` ASC) ,
  CONSTRAINT `fk_superviseurs_gestionnaires1`
    FOREIGN KEY (`gestionnaires_id`)
    REFERENCES `afya`.`gestionnaires` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`zone_supervisions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`zone_supervisions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `superviseurs_id` INT NOT NULL,
  `ville` VARCHAR(45) NULL,
  `commune_quartier` VARCHAR(45) NULL,
  `code` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_zone_supervisions_superviseurs1_idx` (`superviseurs_id` ASC) ,
  CONSTRAINT `fk_zone_supervisions_superviseurs1`
    FOREIGN KEY (`superviseurs_id`)
    REFERENCES `afya`.`superviseurs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`pharmacies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`pharmacies` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `zone_supervisions_id` INT NOT NULL,
  `nom` VARCHAR(45) NULL,
  `contacts` VARCHAR(45) NULL,
  `Email` VARCHAR(45) NULL,
  `ville` VARCHAR(45) NULL,
  `commune_quartier` VARCHAR(45) NULL,
  `localisation` VARCHAR(45) NULL COMMENT 'precision exacte de la position de la pharmacie ',
  `garde` VARCHAR(45) NULL COMMENT 'cela permet de definir si la pharmacie est de garde\n \nTRUE: elle est de garde \n\nFALSE: n\'est pas de garde\n\nNB: par defaut la pharmacie n\'est de garde  ',
  `longitude` VARCHAR(45) NULL,
  `latitude` VARCHAR(45) NULL,
  `id_users` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pharmacies_zone_supervisions1_idx` (`zone_supervisions_id` ASC) ,
  CONSTRAINT `fk_pharmacies_zone_supervisions1`
    FOREIGN KEY (`zone_supervisions_id`)
    REFERENCES `afya`.`zone_supervisions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`livreurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`livreurs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `zone_supervisions_id` INT NOT NULL,
  `nom` VARCHAR(45) NOT NULL,
  `prenom` VARCHAR(45) NOT NULL,
  `date_naissance` DATE NOT NULL,
  `telephone` VARCHAR(45) NOT NULL,
  `cni` VARCHAR(45) NOT NULL,
  `telephone_parents` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `nom_parent` VARCHAR(45) NULL,
  `actif` VARCHAR(45) NULL COMMENT 'definir le state du livreur \n\nTRUE: il est actif\n\nFALSE: bloqué\n\nNB: lorsque le livreur est bloqué il n\'a plus le droit de recevoir les ordonnaces à livrée\n',
  `id_users` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_livreurs_zone_supervisions1_idx` (`zone_supervisions_id` ASC) ,
  CONSTRAINT `fk_livreurs_zone_supervisions1`
    FOREIGN KEY (`zone_supervisions_id`)
    REFERENCES `afya`.`zone_supervisions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`ordonnances`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`ordonnances` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `patients_id` INT NOT NULL,
  `livreurs_id` INT NULL,
  `photo_1` VARCHAR(45) NULL,
  `photo_2` VARCHAR(45) NULL,
  `photo_3` VARCHAR(45) NULL,
  `writing` VARCHAR(45) NULL COMMENT 'soumission d\'une ordonnance par ecrit',
  `prescription_audio` VARCHAR(45) NULL,
  `prescription_video` VARCHAR(45) NULL,
  `prescription_texte` VARCHAR(45) NULL,
  `date_soumission` VARCHAR(45) NULL COMMENT 'la date a laquelle le patient a soumit son ordonnace ',
  `longitude` VARCHAR(45) NULL,
  `latitude` VARCHAR(45) NULL,
  `delivery_state` VARCHAR(45) NULL COMMENT 'les differents etat de livraison\n\nINIT: nouvelle ordonnance\n\nPENDING: en cour de livraison\n\nSUCESS: livrée\n\nFAIL: annulée\n\n\n\n\n',
  `payement` VARCHAR(45) NULL COMMENT 'etat de payement de l\'ordonnance\n\nTRUE: ordonnance payée\n\nFALSE: ordonnance non  payée',
  `numero_ordonnance` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ordonnances_patients_idx` (`patients_id` ASC) ,
  INDEX `fk_ordonnances_livreurs1_idx` (`livreurs_id` ASC) ,
  CONSTRAINT `fk_ordonnances_patients`
    FOREIGN KEY (`patients_id`)
    REFERENCES `afya`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ordonnances_livreurs1`
    FOREIGN KEY (`livreurs_id`)
    REFERENCES `afya`.`livreurs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`factures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`factures` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `patients_id` INT NOT NULL,
  `pharmacies_id` INT NOT NULL,
  `ordonnances_id` INT NOT NULL,
  `numero_facture` VARCHAR(45) NULL,
  `prix` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `montant` VARCHAR(45) NOT NULL,
  `date` DATE NOT NULL,
  `payement` VARCHAR(45) NULL COMMENT 'payement permet de voir le status du payment \n\nTRUE: payement effectué\n \n FALSE: payement non effectué',
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_factures_patients1_idx` (`patients_id` ASC) ,
  INDEX `fk_factures_pharmacies1_idx` (`pharmacies_id` ASC) ,
  INDEX `fk_factures_ordonnances1_idx` (`ordonnances_id` ASC) ,
  CONSTRAINT `fk_factures_patients1`
    FOREIGN KEY (`patients_id`)
    REFERENCES `afya`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_factures_pharmacies1`
    FOREIGN KEY (`pharmacies_id`)
    REFERENCES `afya`.`pharmacies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_factures_ordonnances1`
    FOREIGN KEY (`ordonnances_id`)
    REFERENCES `afya`.`ordonnances` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`ordonnances_has_pharmacies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`ordonnances_has_pharmacies` (
  `ordonnances_id` INT NOT NULL,
  `pharmacies_id` INT NOT NULL,
  PRIMARY KEY (`ordonnances_id`, `pharmacies_id`),
  INDEX `fk_ordonnances_has_pharmacies_pharmacies1_idx` (`pharmacies_id` ASC) ,
  INDEX `fk_ordonnances_has_pharmacies_ordonnances1_idx` (`ordonnances_id` ASC) ,
  CONSTRAINT `fk_ordonnances_has_pharmacies_ordonnances1`
    FOREIGN KEY (`ordonnances_id`)
    REFERENCES `afya`.`ordonnances` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ordonnances_has_pharmacies_pharmacies1`
    FOREIGN KEY (`pharmacies_id`)
    REFERENCES `afya`.`pharmacies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`commune_quartier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`commune_quartier` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`ville`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`ville` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom_ville` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  `commune_quartier_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ville_commune_quartier1_idx` (`commune_quartier_id` ASC) ,
  CONSTRAINT `fk_ville_commune_quartier1`
    FOREIGN KEY (`commune_quartier_id`)
    REFERENCES `afya`.`commune_quartier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `afya`.`medecin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `afya`.`medecin` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `telephone` VARCHAR(45) NULL,
  `ville` VARCHAR(45) NULL,
  `commune_quartier` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `code_parrainage` VARCHAR(45) NULL,
  `id_users` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
